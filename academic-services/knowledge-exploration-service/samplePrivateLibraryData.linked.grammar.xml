<?xml version="1.0" encoding="utf-8"?>
<grammar root="SearchPapers">
  <import schema="samplePrivateLibraryData.linked.schema.json" name="libraryPapers"/>

  <rule id="SearchPapers">

    <tag>
      <!-- Query variable contains the query expression that maps to each grammar interpretation path and can be directly used with Evaluate to get entities -->
      query = All();

      <!-- Variables used for various asserts later in grammar -->
      titleMatched = false;
      abstractMatched = false;
      entityAttributeMatched = false;
    </tag>

    <item repeat="1-INF" repeat-logprob="-1">

      <!-- Assert that we're not ever more than one attribute beyond the end of the query if generating query completions -->
      <tag>
        IsBeyondEndOfQuery = GetVariable("IsBeyondEndOfQuery", "system");
        AssertEquals(IsBeyondEndOfQuery, false);
      </tag>

      <one-of>
        <!-- Different search behaviors -->
        <item>
            <one-of>
                <!-- Match one or more title words -->
                <item logprob="-1">
                    <tag>
                        titleMatched = false;
                    </tag>

                    <item repeat="1-INF">
                        <!-- Assert that we're not ever more than one attribute beyond the end of the query if generating query completions -->
                        <tag>
                            IsBeyondEndOfQuery = GetVariable("IsBeyondEndOfQuery", "system");
                            AssertEquals(IsBeyondEndOfQuery, false);
                        </tag>
                        <one-of>
                            <!-- Match title word -->
                            <item logprob="-1">
                                <attrref uri="libraryPapers#TitleWords" name="q"/>
                                <tag>
                                query = And(query, q);
                                titleMatched = true;
                                </tag>
                            </item>
                        </one-of>
                    </item>
                    <!-- Require that full title or at least one title word was matched -->
                    <tag>
                        AssertEquals(titleMatched, true);
                    </tag>
                </item>

                <!-- Match one or more abstract/stop words -->
                <item logprob="-3">
                    <tag>
                        abstractMatched = false;
                    </tag>
                    <item repeat="1-INF">
                        <!-- Assert that we're not ever more than one attribute beyond the end of the query if generating query completions -->
                        <tag>
                            IsBeyondEndOfQuery = GetVariable("IsBeyondEndOfQuery", "system");
                            AssertEquals(IsBeyondEndOfQuery, false);
                        </tag>
                        <one-of>
                            <!-- Match abstract word -->
                            <item logprob="-3">
                                <attrref uri="libraryPapers#AbstractWords" name="q" />
                                <tag>
                                query = And(query, q);
                                abstractMatched = true;
                                </tag>
                            </item>
                        </one-of>

                    </item>
                    <!-- Require that at least one abstract word was matched -->
                    <tag>
                        AssertEquals(abstractMatched, true);
                    </tag>
                </item>

                <!-- Direct match all other supported entity attributes -->
                <item>
                    <one-of>
                        <!-- Match supported composite attributes-->
                        <item>
                            <one-of>
                            <!-- Match author -->
                            <item>
                                <attrref uri="libraryPapers#AuthorAffiliations.AuthorName" name="q"/>
                            </item>

                            <!-- Match affiliation -->
                            <item>
                            <attrref uri="libraryPapers#AuthorAffiliations.AffiliationName" name="q"/>
                            </item>

                            <!-- Match field of study -->
                            <item>
                                <attrref uri="libraryPapers#FieldsOfStudy.Name" name="q"/>
                            </item>
                            </one-of>

                            <tag>
                                q = Composite(q);
                            </tag>
                        </item>

                        <!-- Match full title -->
                        <item>
                            <attrref uri="libraryPapers#Title" name="q"/>
                        </item>

                        <!-- Match year -->
                        <item>
                            <attrref uri="libraryPapers#Year" name="q"/>
                        </item>

                        <!-- Match digitial object identifier -->
                        <item>
                            <attrref uri="libraryPapers#DOI" name="q"/>
                        </item>
                    </one-of>

                    <tag>
                        query = And(query, q);
                    </tag>
                </item>

            </one-of>
            <!-- Require that at least one search grammar path is part of the interpretation -->
            <tag>
            entityAttributeMatched = true;
            </tag>
        </item>

        <!-- Match any single term, aka "garbage" terms, that could not be matched against entity attributes -->
        <item logprob="-25">
          <!-- Make any terms as "garbage" terms -->
          <regex pattern='\b\w+' name="garbage" />
        </item>

      </one-of>
    </item>

    <tag>
      <!-- Require that at least a single entity attribute has been matched -->
      AssertEquals(entityAttributeMatched, true);
    </tag>

    <!-- Match all remaining query terms that could not be matched against entity attributes -->
    <item repeat="0-1">
      <tag>
        <!-- Only match remaining query terms if we're not at the end of the query -->
        IsAtEndOfQuery = GetVariable("IsAtEndOfQuery", "system");
        AssertEquals(IsAtEndOfQuery, false);
      </tag>
      <!-- Gets all remaining query terms and places them into "remainingGarbage" variable -->
      <regex pattern=".*" name="remainingGarbage" />
      <tag>

        <!-- Use number of spaces in string + 1 as a way to determine word count -->
        spaceCount = MatchCount(remainingGarbage, "\s+");
        spaceCount = Increment(spaceCount);

        <!-- Add grammar weight "penalty" based on the number of "garbage" words present; note that this penalty is equivilant to the "logprob" weight penalty used for <item> tags -->
        penalty = Multiply(spaceCount, 25000);
        query = AddGrammarWeight(query, penalty);
      </tag>
    </item>

    <!-- Resolve all completions, synonyms -->
    <tag>
      out = Resolve(query);
    </tag>

  </rule>

</grammar>