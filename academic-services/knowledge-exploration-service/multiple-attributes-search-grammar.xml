<?xml version="1.0" encoding="utf-8"?>
<grammar root="SearchPapers">
  <import schema="samplePrivateLibraryData.linked.search.schema.json" name="publications"/>  
  <rule id="SearchPapers">
    <!-- Initialize the output query to `All()`. We will modify it as we match more search query terms.-->
    <tag>
      query = All();
    </tag>
    <item repeat="0-1">papers</item>
    <!-- Process search query terms by matching terms against different paper attributes-->
    <item repeat="1-INF" repeat-logprob="-1">
      <!-- We exit the loop when there's no more search query terms left to process. -->
      <tag>
        IsBeyondEndOfQuery = GetVariable("IsBeyondEndOfQuery", "system");
        AssertEquals(IsBeyondEndOfQuery, false);
      </tag>
      <one-of>
        <!-- Match field of study -->
        <item logprob="-1">
          <item repeat="0-1">about</item>
          <attrref uri="publications#FieldsOfStudy.NormalizedName" name="q"/>
        </item>
        <!-- Match author -->
        <item logprob="-1">
          <item repeat="0-1">by</item>
          <attrref uri="publications#AuthorAffiliations.NormalizedAuthorName" name="q"/>
        </item>
        <!-- Match affiliation -->
        <item logprob="-1">
          <item repeat="0-1">from</item>
          <attrref uri="publications#AuthorAffiliations.NormalizedAffiliationName" name="q"/>
        </item>
      </one-of>
      <!-- Modify the output query to add new query constraints reflecting the attribute match.-->
      <tag>
        q = Composite(q);
        query = And(query, q);
      </tag>
    </item>
    <tag>
      out = query;
    </tag>
  </rule>
</grammar>